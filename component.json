{
    "title": "AWS Service Catalog",
    "description": "AWS Service Catalog  AWS Service Catalog [https://aws.amazon.com/servicecatalog/] enables\norganizations to create and manage catalogs of IT services that are approved for\nuse on AWS. To get the most out of this documentation, you should be familiar\nwith the terminology discussed in AWS Service Catalog Concepts\n[http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html]\n.",
    "docsUrl": "https://docs.aws.amazon.com/servicecatalog/",
    "url": "https://api.apis.guru/v2/specs/amazonaws.com/servicecatalog/2015-12-10/swagger.json",
    "envVars": {},
    "credentials": {
        "fields": {
            "server": {
                "label": "Server",
                "viewClass": "SelectView",
                "model": [
                    "https://servicecatalog.amazonaws.com/",
                    "http://servicecatalog.amazonaws.com/",
                    "--- Custom URL"
                ],
                "required": true
            },
            "otherServer": {
                "label": "Custom Server URL",
                "viewClass": "TextFieldView"
            },
            "auth_hmac": {
                "label": "Authorization (hmac)",
                "viewClass": "TextFieldView",
                "note": "Amazon Signature authorization v4"
            }
        }
    },
    "triggers": {
        "startFlow": {
            "main": "./lib/triggers/startFlow.js",
            "type": "polling",
            "title": "Start Flow",
            "fields": {}
        }
    },
    "actions": {
        "AcceptPortfolioShare": {
            "main": "./lib/actions/AcceptPortfolioShare.js",
            "title": "AcceptPortfolioShare",
            "description": "Accepts an offer to share the specified portfolio.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AcceptPortfolioShare.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AssociatePrincipalWithPortfolio": {
            "main": "./lib/actions/AssociatePrincipalWithPortfolio.js",
            "title": "AssociatePrincipalWithPortfolio",
            "description": "Associates the specified principal ARN with the specified portfolio.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AssociatePrincipalWithPortfolio.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AssociateProductWithPortfolio": {
            "main": "./lib/actions/AssociateProductWithPortfolio.js",
            "title": "AssociateProductWithPortfolio",
            "description": "Associates the specified product with the specified portfolio.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AssociateProductWithPortfolio.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AssociateServiceActionWithProvisioningArtifact": {
            "main": "./lib/actions/AssociateServiceActionWithProvisioningArtifact.js",
            "title": "AssociateServiceActionWithProvisioningArtifact",
            "description": "Associates a self-service action with a provisioning artifact.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AssociateServiceActionWithProvisioningArtifact.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AssociateTagOptionWithResource": {
            "main": "./lib/actions/AssociateTagOptionWithResource.js",
            "title": "AssociateTagOptionWithResource",
            "description": "Associate the specified TagOption with the specified portfolio or product.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AssociateTagOptionWithResource.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "BatchAssociateServiceActionWithProvisioningArtifact": {
            "main": "./lib/actions/BatchAssociateServiceActionWithProvisioningArtifact.js",
            "title": "BatchAssociateServiceActionWithProvisioningArtifact",
            "description": "Associates multiple self-service actions with provisioning artifacts.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/BatchAssociateServiceActionWithProvisioningArtifact.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "BatchDisassociateServiceActionFromProvisioningArtifact": {
            "main": "./lib/actions/BatchDisassociateServiceActionFromProvisioningArtifact.js",
            "title": "BatchDisassociateServiceActionFromProvisioningArtifact",
            "description": "Disassociates a batch of self-service actions from the specified provisioning artifact.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/BatchDisassociateServiceActionFromProvisioningArtifact.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CopyProduct": {
            "main": "./lib/actions/CopyProduct.js",
            "title": "CopyProduct",
            "description": "Copies the specified source product to the specified target product or a new\nproduct.\n\nYou can copy a product to the same account or another account. You can copy a\nproduct to the same region or another region.\n\nThis operation is performed asynchronously. To track the progress of the\noperation, use DescribeCopyProductStatus.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CopyProduct.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreateConstraint": {
            "main": "./lib/actions/CreateConstraint.js",
            "title": "CreateConstraint",
            "description": "Creates a constraint.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreateConstraint.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreatePortfolio": {
            "main": "./lib/actions/CreatePortfolio.js",
            "title": "CreatePortfolio",
            "description": "Creates a portfolio.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreatePortfolio.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreatePortfolioShare": {
            "main": "./lib/actions/CreatePortfolioShare.js",
            "title": "CreatePortfolioShare",
            "description": "Shares the specified portfolio with the specified account or organization node. Shares to an organization node can only be created by the master account of an Organization. AWSOrganizationsAccess must be enabled in order to create a portfolio share to an organization node.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreatePortfolioShare.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreateProduct": {
            "main": "./lib/actions/CreateProduct.js",
            "title": "CreateProduct",
            "description": "Creates a product.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreateProduct.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreateProvisionedProductPlan": {
            "main": "./lib/actions/CreateProvisionedProductPlan.js",
            "title": "CreateProvisionedProductPlan",
            "description": "Creates a plan. A plan includes the list of resources to be created (when\nprovisioning a new product) or modified (when updating a provisioned product)\nwhen the plan is executed.\n\nYou can create one plan per provisioned product. To create a plan for an\nexisting provisioned product, the product status must be AVAILBLE or TAINTED.\n\nTo view the resource changes in the change set, use \nDescribeProvisionedProductPlan. To create or modify the provisioned product, use \nExecuteProvisionedProductPlan.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreateProvisionedProductPlan.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreateProvisioningArtifact": {
            "main": "./lib/actions/CreateProvisioningArtifact.js",
            "title": "CreateProvisioningArtifact",
            "description": "Creates a provisioning artifact (also known as a version) for the specified\nproduct.\n\nYou cannot create a provisioning artifact for a product that was shared with\nyou.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreateProvisioningArtifact.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreateServiceAction": {
            "main": "./lib/actions/CreateServiceAction.js",
            "title": "CreateServiceAction",
            "description": "Creates a self-service action.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreateServiceAction.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreateTagOption": {
            "main": "./lib/actions/CreateTagOption.js",
            "title": "CreateTagOption",
            "description": "Creates a TagOption.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreateTagOption.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteConstraint": {
            "main": "./lib/actions/DeleteConstraint.js",
            "title": "DeleteConstraint",
            "description": "Deletes the specified constraint.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteConstraint.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeletePortfolio": {
            "main": "./lib/actions/DeletePortfolio.js",
            "title": "DeletePortfolio",
            "description": "Deletes the specified portfolio.\n\nYou cannot delete a portfolio if it was shared with you or if it has associated\nproducts, users, constraints, or shared accounts.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeletePortfolio.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeletePortfolioShare": {
            "main": "./lib/actions/DeletePortfolioShare.js",
            "title": "DeletePortfolioShare",
            "description": "Stops sharing the specified portfolio with the specified account or organization node. Shares to an organization node can only be deleted by the master account of an Organization.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeletePortfolioShare.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteProduct": {
            "main": "./lib/actions/DeleteProduct.js",
            "title": "DeleteProduct",
            "description": "Deletes the specified product.\n\nYou cannot delete a product if it was shared with you or is associated with a\nportfolio.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteProduct.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteProvisionedProductPlan": {
            "main": "./lib/actions/DeleteProvisionedProductPlan.js",
            "title": "DeleteProvisionedProductPlan",
            "description": "Deletes the specified plan.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteProvisionedProductPlan.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteProvisioningArtifact": {
            "main": "./lib/actions/DeleteProvisioningArtifact.js",
            "title": "DeleteProvisioningArtifact",
            "description": "Deletes the specified provisioning artifact (also known as a version) for the\nspecified product.\n\nYou cannot delete a provisioning artifact associated with a product that was\nshared with you. You cannot delete the last provisioning artifact for a product,\nbecause a product must have at least one provisioning artifact.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteProvisioningArtifact.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteServiceAction": {
            "main": "./lib/actions/DeleteServiceAction.js",
            "title": "DeleteServiceAction",
            "description": "Deletes a self-service action.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteServiceAction.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteTagOption": {
            "main": "./lib/actions/DeleteTagOption.js",
            "title": "DeleteTagOption",
            "description": "Deletes the specified TagOption.\n\nYou cannot delete a TagOption if it is associated with a product or portfolio.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteTagOption.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeConstraint": {
            "main": "./lib/actions/DescribeConstraint.js",
            "title": "DescribeConstraint",
            "description": "Gets information about the specified constraint.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeConstraint.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeCopyProductStatus": {
            "main": "./lib/actions/DescribeCopyProductStatus.js",
            "title": "DescribeCopyProductStatus",
            "description": "Gets the status of the specified copy product operation.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeCopyProductStatus.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribePortfolio": {
            "main": "./lib/actions/DescribePortfolio.js",
            "title": "DescribePortfolio",
            "description": "Gets information about the specified portfolio.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribePortfolio.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribePortfolioShareStatus": {
            "main": "./lib/actions/DescribePortfolioShareStatus.js",
            "title": "DescribePortfolioShareStatus",
            "description": "Gets the status of the specified portfolio share operation. This API can only be called by the master account in the organization.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribePortfolioShareStatus.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeProduct": {
            "main": "./lib/actions/DescribeProduct.js",
            "title": "DescribeProduct",
            "description": "Gets information about the specified product.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeProduct.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeProductAsAdmin": {
            "main": "./lib/actions/DescribeProductAsAdmin.js",
            "title": "DescribeProductAsAdmin",
            "description": "Gets information about the specified product. This operation is run with administrator access.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeProductAsAdmin.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeProductView": {
            "main": "./lib/actions/DescribeProductView.js",
            "title": "DescribeProductView",
            "description": "Gets information about the specified product.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeProductView.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeProvisionedProduct": {
            "main": "./lib/actions/DescribeProvisionedProduct.js",
            "title": "DescribeProvisionedProduct",
            "description": "Gets information about the specified provisioned product.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeProvisionedProduct.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeProvisionedProductPlan": {
            "main": "./lib/actions/DescribeProvisionedProductPlan.js",
            "title": "DescribeProvisionedProductPlan",
            "description": "Gets information about the resource changes for the specified plan.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeProvisionedProductPlan.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeProvisioningArtifact": {
            "main": "./lib/actions/DescribeProvisioningArtifact.js",
            "title": "DescribeProvisioningArtifact",
            "description": "Gets information about the specified provisioning artifact (also known as a version) for the specified product.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeProvisioningArtifact.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeProvisioningParameters": {
            "main": "./lib/actions/DescribeProvisioningParameters.js",
            "title": "DescribeProvisioningParameters",
            "description": "Gets information about the configuration required to provision the specified\nproduct using the specified provisioning artifact.\n\nIf the output contains a TagOption key with an empty list of values, there is a\nTagOption conflict for that key. The end user cannot take action to fix the\nconflict, and launch is not blocked. In subsequent calls to ProvisionProduct, do\nnot include conflicted TagOption keys as tags, or this causes the error\n\"Parameter validation failed: Missing required parameter in Tags[N]:Value\". Tag\nthe provisioned product with the value \nsc-tagoption-conflict-portfolioId-productId.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeProvisioningParameters.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeRecord": {
            "main": "./lib/actions/DescribeRecord.js",
            "title": "DescribeRecord",
            "description": "Gets information about the specified request operation.\n\nUse this operation after calling a request operation (for example, \nProvisionProduct, TerminateProvisionedProduct, or UpdateProvisionedProduct).",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeRecord.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeServiceAction": {
            "main": "./lib/actions/DescribeServiceAction.js",
            "title": "DescribeServiceAction",
            "description": "Describes a self-service action.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeServiceAction.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeTagOption": {
            "main": "./lib/actions/DescribeTagOption.js",
            "title": "DescribeTagOption",
            "description": "Gets information about the specified TagOption.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeTagOption.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DisableAWSOrganizationsAccess": {
            "main": "./lib/actions/DisableAWSOrganizationsAccess.js",
            "title": "DisableAWSOrganizationsAccess",
            "description": "Disable portfolio sharing through AWS Organizations feature. This feature will not delete your current shares but it will prevent you from creating new shares throughout your organization. Current shares will not be in sync with your organization structure if it changes after calling this API. This API can only be called by the master account in the organization.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DisableAWSOrganizationsAccess.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DisassociatePrincipalFromPortfolio": {
            "main": "./lib/actions/DisassociatePrincipalFromPortfolio.js",
            "title": "DisassociatePrincipalFromPortfolio",
            "description": "Disassociates a previously associated principal ARN from a specified portfolio.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DisassociatePrincipalFromPortfolio.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DisassociateProductFromPortfolio": {
            "main": "./lib/actions/DisassociateProductFromPortfolio.js",
            "title": "DisassociateProductFromPortfolio",
            "description": "Disassociates the specified product from the specified portfolio. ",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DisassociateProductFromPortfolio.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DisassociateServiceActionFromProvisioningArtifact": {
            "main": "./lib/actions/DisassociateServiceActionFromProvisioningArtifact.js",
            "title": "DisassociateServiceActionFromProvisioningArtifact",
            "description": "Disassociates the specified self-service action association from the specified provisioning artifact.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DisassociateServiceActionFromProvisioningArtifact.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DisassociateTagOptionFromResource": {
            "main": "./lib/actions/DisassociateTagOptionFromResource.js",
            "title": "DisassociateTagOptionFromResource",
            "description": "Disassociates the specified TagOption from the specified resource.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DisassociateTagOptionFromResource.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "EnableAWSOrganizationsAccess": {
            "main": "./lib/actions/EnableAWSOrganizationsAccess.js",
            "title": "EnableAWSOrganizationsAccess",
            "description": "Enable portfolio sharing feature through AWS Organizations. This API will allow\nService Catalog to receive updates on your organization in order to sync your\nshares with the current structure. This API can only be called by the master\naccount in the organization.\n\nBy calling this API Service Catalog will make a call to\norganizations:EnableAWSServiceAccess on your behalf so that your shares can be\nin sync with any changes in your AWS Organizations structure.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/EnableAWSOrganizationsAccess.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ExecuteProvisionedProductPlan": {
            "main": "./lib/actions/ExecuteProvisionedProductPlan.js",
            "title": "ExecuteProvisionedProductPlan",
            "description": "Provisions or modifies a product based on the resource changes for the specified plan.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ExecuteProvisionedProductPlan.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ExecuteProvisionedProductServiceAction": {
            "main": "./lib/actions/ExecuteProvisionedProductServiceAction.js",
            "title": "ExecuteProvisionedProductServiceAction",
            "description": "Executes a self-service action against a provisioned product.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ExecuteProvisionedProductServiceAction.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetAWSOrganizationsAccessStatus": {
            "main": "./lib/actions/GetAWSOrganizationsAccessStatus.js",
            "title": "GetAWSOrganizationsAccessStatus",
            "description": "Get the Access Status for AWS Organization portfolio share feature. This API can only be called by the master account in the organization.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetAWSOrganizationsAccessStatus.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListAcceptedPortfolioShares": {
            "main": "./lib/actions/ListAcceptedPortfolioShares.js",
            "title": "ListAcceptedPortfolioShares",
            "description": "Lists all portfolios for which sharing was accepted by this account.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListAcceptedPortfolioShares.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListConstraintsForPortfolio": {
            "main": "./lib/actions/ListConstraintsForPortfolio.js",
            "title": "ListConstraintsForPortfolio",
            "description": "Lists the constraints for the specified portfolio and product.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListConstraintsForPortfolio.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListLaunchPaths": {
            "main": "./lib/actions/ListLaunchPaths.js",
            "title": "ListLaunchPaths",
            "description": "Lists the paths to the specified product. A path is how the user has access to a specified product, and is necessary when provisioning a product. A path also determines the constraints put on the product.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListLaunchPaths.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListOrganizationPortfolioAccess": {
            "main": "./lib/actions/ListOrganizationPortfolioAccess.js",
            "title": "ListOrganizationPortfolioAccess",
            "description": "Lists the organization nodes that have access to the specified portfolio. This API can only be called by the master account in the organization.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListOrganizationPortfolioAccess.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListPortfolioAccess": {
            "main": "./lib/actions/ListPortfolioAccess.js",
            "title": "ListPortfolioAccess",
            "description": "Lists the account IDs that have access to the specified portfolio.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListPortfolioAccess.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListPortfolios": {
            "main": "./lib/actions/ListPortfolios.js",
            "title": "ListPortfolios",
            "description": "Lists all portfolios in the catalog.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListPortfolios.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListPortfoliosForProduct": {
            "main": "./lib/actions/ListPortfoliosForProduct.js",
            "title": "ListPortfoliosForProduct",
            "description": "Lists all portfolios that the specified product is associated with.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListPortfoliosForProduct.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListPrincipalsForPortfolio": {
            "main": "./lib/actions/ListPrincipalsForPortfolio.js",
            "title": "ListPrincipalsForPortfolio",
            "description": "Lists all principal ARNs associated with the specified portfolio.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListPrincipalsForPortfolio.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListProvisionedProductPlans": {
            "main": "./lib/actions/ListProvisionedProductPlans.js",
            "title": "ListProvisionedProductPlans",
            "description": "Lists the plans for the specified provisioned product or all plans to which the user has access.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListProvisionedProductPlans.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListProvisioningArtifacts": {
            "main": "./lib/actions/ListProvisioningArtifacts.js",
            "title": "ListProvisioningArtifacts",
            "description": "Lists all provisioning artifacts (also known as versions) for the specified product.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListProvisioningArtifacts.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListProvisioningArtifactsForServiceAction": {
            "main": "./lib/actions/ListProvisioningArtifactsForServiceAction.js",
            "title": "ListProvisioningArtifactsForServiceAction",
            "description": "Lists all provisioning artifacts (also known as versions) for the specified self-service action.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListProvisioningArtifactsForServiceAction.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListRecordHistory": {
            "main": "./lib/actions/ListRecordHistory.js",
            "title": "ListRecordHistory",
            "description": "Lists the specified requests or all performed requests.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListRecordHistory.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListResourcesForTagOption": {
            "main": "./lib/actions/ListResourcesForTagOption.js",
            "title": "ListResourcesForTagOption",
            "description": "Lists the resources associated with the specified TagOption.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListResourcesForTagOption.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListServiceActions": {
            "main": "./lib/actions/ListServiceActions.js",
            "title": "ListServiceActions",
            "description": "Lists all self-service actions.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListServiceActions.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListServiceActionsForProvisioningArtifact": {
            "main": "./lib/actions/ListServiceActionsForProvisioningArtifact.js",
            "title": "ListServiceActionsForProvisioningArtifact",
            "description": "Returns a paginated list of self-service actions associated with the specified Product ID and Provisioning Artifact ID.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListServiceActionsForProvisioningArtifact.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListTagOptions": {
            "main": "./lib/actions/ListTagOptions.js",
            "title": "ListTagOptions",
            "description": "Lists the specified TagOptions or all TagOptions.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListTagOptions.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ProvisionProduct": {
            "main": "./lib/actions/ProvisionProduct.js",
            "title": "ProvisionProduct",
            "description": "Provisions the specified product.\n\nA provisioned product is a resourced instance of a product. For example,\nprovisioning a product based on a CloudFormation template launches a\nCloudFormation stack and its underlying resources. You can check the status of\nthis request using DescribeRecord.\n\nIf the request contains a tag key with an empty list of values, there is a tag\nconflict for that key. Do not include conflicted keys as tags, or this causes\nthe error \"Parameter validation failed: Missing required parameter in Tags[N]:\nValue\".",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ProvisionProduct.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "RejectPortfolioShare": {
            "main": "./lib/actions/RejectPortfolioShare.js",
            "title": "RejectPortfolioShare",
            "description": "Rejects an offer to share the specified portfolio.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/RejectPortfolioShare.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ScanProvisionedProducts": {
            "main": "./lib/actions/ScanProvisionedProducts.js",
            "title": "ScanProvisionedProducts",
            "description": "Lists the provisioned products that are available (not terminated).\n\nTo use additional filtering, see SearchProvisionedProducts.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ScanProvisionedProducts.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "SearchProducts": {
            "main": "./lib/actions/SearchProducts.js",
            "title": "SearchProducts",
            "description": "Gets information about the products to which the caller has access.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/SearchProducts.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "SearchProductsAsAdmin": {
            "main": "./lib/actions/SearchProductsAsAdmin.js",
            "title": "SearchProductsAsAdmin",
            "description": "Gets information about the products for the specified portfolio or all products.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/SearchProductsAsAdmin.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "SearchProvisionedProducts": {
            "main": "./lib/actions/SearchProvisionedProducts.js",
            "title": "SearchProvisionedProducts",
            "description": "Gets information about the provisioned products that meet the specified criteria.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/SearchProvisionedProducts.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "TerminateProvisionedProduct": {
            "main": "./lib/actions/TerminateProvisionedProduct.js",
            "title": "TerminateProvisionedProduct",
            "description": "Terminates the specified provisioned product.\n\nThis operation does not delete any records associated with the provisioned\nproduct.\n\nYou can check the status of this request using DescribeRecord.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/TerminateProvisionedProduct.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "UpdateConstraint": {
            "main": "./lib/actions/UpdateConstraint.js",
            "title": "UpdateConstraint",
            "description": "Updates the specified constraint.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/UpdateConstraint.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "UpdatePortfolio": {
            "main": "./lib/actions/UpdatePortfolio.js",
            "title": "UpdatePortfolio",
            "description": "Updates the specified portfolio.\n\nYou cannot update a product that was shared with you.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/UpdatePortfolio.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "UpdateProduct": {
            "main": "./lib/actions/UpdateProduct.js",
            "title": "UpdateProduct",
            "description": "Updates the specified product.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/UpdateProduct.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "UpdateProvisionedProduct": {
            "main": "./lib/actions/UpdateProvisionedProduct.js",
            "title": "UpdateProvisionedProduct",
            "description": "Requests updates to the configuration of the specified provisioned product.\n\nIf there are tags associated with the object, they cannot be updated or added.\nDepending on the specific updates requested, this operation can update with no\ninterruption, with some interruption, or replace the provisioned product\nentirely.\n\nYou can check the status of this request using DescribeRecord.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/UpdateProvisionedProduct.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "UpdateProvisioningArtifact": {
            "main": "./lib/actions/UpdateProvisioningArtifact.js",
            "title": "UpdateProvisioningArtifact",
            "description": "Updates the specified provisioning artifact (also known as a version) for the\nspecified product.\n\nYou cannot update a provisioning artifact for a product that was shared with\nyou.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/UpdateProvisioningArtifact.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "UpdateServiceAction": {
            "main": "./lib/actions/UpdateServiceAction.js",
            "title": "UpdateServiceAction",
            "description": "Updates a self-service action.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/UpdateServiceAction.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "UpdateTagOption": {
            "main": "./lib/actions/UpdateTagOption.js",
            "title": "UpdateTagOption",
            "description": "Updates the specified TagOption.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/UpdateTagOption.in.json",
                "out": {
                    "type": "object"
                }
            }
        }
    }
}